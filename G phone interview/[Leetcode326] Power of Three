/***

Given an integer, write a function to determine if it is a power of three.

Follow up:
Could you do it without using any loop / recursion?

***/

Method 1
class Solution {
    public boolean isPowerOfThree(int n) {
        if (n <= 0) return false;
        while (n > 1) {
            if (n % 3 != 0) return false;
            n /= 3;
            
        }
        return true;
    }
}

Method 2 (Recursive)

public boolean isPowerOfThree(int n) {
    return n > 0 && (n == 1 || (n % 3 == 0 && isPowerOfThree(n / 3)));
}

Follow up:
Could you do it without using any loop / recursion?

public class Solution {
    public boolean isPowerOfThree(int n) {
        // 1162261467 is 3^19,  3^20 is bigger than int  
        return ( n>0 &&  1162261467%n==0);
    }
}
