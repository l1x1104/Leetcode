/*
Given a linked list, remove the nth node from the end of list and return its head.

For example: Given linked list: 1->2->3->4->5, and n = 2.
             After removing the second node from the end, the linked list becomes 1->2->3->5.
             
Note: 1. Given n will always be valid.
      2. Try to do this in one pass.
*/
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        ListNode start = new ListNode(0);
        start.next = head;
        ListNode slow = start, fast = start;
        
        for(int i=1; i<=n+1; i++)   {
            fast = fast.next;
        }
        
        while(fast != null) {
          slow = slow.next;
          fast = fast.next;
        }
        slow.next = slow.next.next;
        return start.next;
    }
 }
