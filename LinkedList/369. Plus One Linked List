/***
Given a non-negative integer represented as non-empty a singly linked list of digits, plus one to the integer.

You may assume the integer do not contain any leading zero, except the number 0 itself.

The digits are stored such that the most significant digit is at the head of the list.

Example:
Input:
1->2->3

Output:
1->2->4
***/
#1 Iterative Two-Pointers with dummy node
public class Solution {
    public ListNode plusOne(ListNode head) {
        ListNode dummy = new ListNode(0);
        dummy.next = head;
        ListNode lastNotNine = dummy, curr = head;
        
        while (curr != null) {
            if (curr.val != 9) {
                lastNotNine = curr;
            }
            curr = curr.next;
        }
        lastNotNine.val++;
        curr = lastNotNine.next;
        while (curr != null) {
            curr.val = 0;
            curr = curr.next;
        }
        return dummy.val == 1 ? dummy : dummy.next;
    }
}
