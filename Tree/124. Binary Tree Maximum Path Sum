想法：一个节点不能访问两次，从而避免走回头路？

后序递归 
class Solution {
    public int maxPathSum(TreeNode root) {
        if(root == null) return 0;
        else if(root.left == null && root.right == null) return root.val;
        int[] max = new int[1];
        int ans = helper(root, max);
        return max[0];
    }
    public int helper(TreeNode root, int[] max) {
        if(root == null) return 0;
        int left = Math.max(0, helper(root.left, max));
        int right = Math.max(0, helper(root.right, max));
        max[0] = Math.max(max[0], left + right + root.val);
        return root.val + Math.max(left, right);
        
    }
}
