    
    public TreeNode constructMaximumBinaryTree(int[] nums) {
        if(nums == null) return null;
        int start = 0, end = nums.length - 1;
        return helper(nums, start, end);
    }
    public TreeNode helper(int[] nums, int start, int end) {
        if(start > end) return null;
        int index = findMax(nums, start, end);
        TreeNode root = new TreeNode(nums[index]);
        root.left = helper(nums, start, index - 1);
        root.right = helper(nums, index + 1, end);
        return root;
    }
    public int findMax(int[] num, int start, int end) {
        int max = start;
        for(int i = start + 1; i <= end; i++) {
            if(num[max] < num[i]) max = i;
        }
        return max;
    }
